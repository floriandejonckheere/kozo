name: Continuous Integration

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - 'production'
  schedule:
    - cron: '0 7 * * 1' # Run every monday at 07:00 UTC

jobs:
  test:
    name: Test application
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Test
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"

          if [[ "$EVENT_NAME" == "schedule" ]]; then
              bundle exec rspec --profile 10 --format progress --tag integration --fail-fast
          else
              bundle exec rspec --profile 10 --format progress
          fi
        env:
          EVENT_NAME: ${{ github.event_name }}

      - name: Lint
        run: bundle exec rubocop --parallel --display-cop-names

  release:
    name: Create release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v2

      - name: Set version
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Publish to RubyGems
        run: |
          mkdir -p ~/.gem
          touch ~/.gem/credentials
          chmod 0600 ~/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > ~/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:
          GEM_HOST_API_KEY: ${{secrets.RUBYGEMS_API_KEY}}

      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.event.repository.name }} ${{ env.VERSION }}
          prerelease: contains(github.ref, '-')
          body: |
            Application ${{ github.event.repository.name }} ${{ env.VERSION }} was released
